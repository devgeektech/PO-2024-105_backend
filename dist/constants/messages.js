"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MESSAGES = void 0;
exports.MESSAGES = {
    LOGIN_SUCCESS: "Login successfully",
    LOGOUT_SUCCESS: "Logout successfully",
    VERIFY_SUCCESS: "Verified successfully",
    USER_EXISTS: "User exists",
    ALREADY_VERIFIED: "Account already verified",
    USER_NOT_EXISTS: "User not exists",
    SUCCESS: "Success",
    ACCOUNT_NOT_APPROVED: "Account is not approved",
    USER_NOT_FOUND: "User not found",
    USER_DELETED: "User deleted successfully",
    OTP_REQUIRED: "Please enter otp",
    INVALID_CREDENTIAL: "Invalid credentials",
    INVALID_LINK: "Invalid link",
    LINK_EXPIRED: "Link expired",
    LINK_VERIFIED: "Link verified",
    PASSWORD_UPDATED: "Password updated successfully",
    INVALID_PASSWORD: "Invalid password",
    ADMIN: {
        ALREADY_EXIST: "Admin already exists please login with credentials",
        WELLNESS_TYPE_EXISTS: "This wellness type already exists",
        WELLNESS_TYPE_CREATED: "Wellness type created successfully",
        WELLNESS_TYPE_NOT_EXISTS: "This wellness type do not exists",
        WELLNESS_TYPE_UPDATED: "Wellness type updated successfully",
        WELLNESS_TYPE_NOT_FOUND: "Wellness type is not found",
        WELLNESS_TYPE_ALREADY_DELETED: "Wellness type is already exists",
        WELLNESS_TYPE_DELETED: "Wellness type deleted successfully",
        WELLNESS_TYPES_FETCHED: "Wellness types retrieved successfully",
        WELLNESS_TYPE_FETCHED: "Wellness type retrieved successfully",
        SERVICE_EXISTS: "A service with this name already exists",
        SERVICE_CREATED: "The service has been successfully created",
        SERVICE_NOT_EXISTS: "The service does not exist",
        SERVICE_UPDATED: "The service has been successfully updated.",
        NO_SERVICES_FOUND: "No services were found",
        SERVICE_NOT_FOUND: "The requested service was not found",
        SERVICE_ALREADY_DELETED: "The service has already been deleted",
        SERVICE_DELETED: "The service has been successfully deleted",
        SERVICE_FETCHED: "The service has been successfully retrieved",
        SERVICES_FETCHED: "All services have been successfully retrieved",
        SUBSERVICE_EXISTS: "Sub-service already exists",
        SUBSERVICE_CREATED: "Sub-service created successfully",
        SUBSERVICE_NOT_EXISTS: "Sub-service does not exist",
        SUBSERVICE_UPDATED: "Sub-service updated successfully",
        SUBSERVICES_NOT_FOUND: "No sub-services found",
        SUBSERVICES_FETCHED: "Sub-services fetched successfully",
        SUBSERVICE_NOT_FOUND: "Sub-service not found",
        SUBSERVICE_FETCHED: "Sub-service fetched successfully",
        SUBSERVICE_ALREADY_DELETED: "Sub-service is already deleted",
        SUBSERVICE_DELETED: "Sub-service deleted successfully"
    },
    PARTNER: {
        VERIFICATION_CODE_SEND: "Account verification code send to email",
    }
};
//# sourceMappingURL=messages.js.map